# coding: utf-8

"""
    NauticalStream | workspace-service

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from nauticalstream_workspace.models.get_amenities_batch_response import GetAmenitiesBatchResponse

class TestGetAmenitiesBatchResponse(unittest.TestCase):
    """GetAmenitiesBatchResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetAmenitiesBatchResponse:
        """Test GetAmenitiesBatchResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetAmenitiesBatchResponse`
        """
        model = GetAmenitiesBatchResponse()
        if include_optional:
            return GetAmenitiesBatchResponse(
                ids = {
                    'key' : nauticalstream_workspace.models.amenity.Amenity(
                        id = 56, 
                        status = 'pending', 
                        created_by = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        deprecated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        deprecated_by = '', 
                        type = 'boolean', 
                        name = '', 
                        key = '', 
                        icon = '', )
                    }
            )
        else:
            return GetAmenitiesBatchResponse(
        )
        """

    def testGetAmenitiesBatchResponse(self):
        """Test GetAmenitiesBatchResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
